<%- 
require 'csv'
csv_lib = RUBY_VERSION =~ /^1.8/ ? FasterCSV : CSV
 
csv_output = csv_lib.generate(headers: true) do |csv|
  csv << ["Question", @dates.reverse.map(&:to_s) ].flatten
  
  max_responses = @user.completed_surveys.where{ date >> my{@dates}}.max_by{ |completed_survey| completed_survey.selected_responses.count }.try(:selected_responses).try(:count) || 0
  
  last_survey = @user.completed_surveys.where{ date >> my{@dates}}.reorder{ date.asc }.last
  
  last_survey.questions.each do |question|
    arr = [question.short_text]
    @dates.reverse.each do |date|
      completed_survey = @user.completed_surveys.find_by_date(date)
      #completed_survey = @user.completed_surveys.where{ (date == my{date}) & survey_id == my{last_survey.id}}.last
      if completed_survey.nil? || completed_survey.survey_id != last_survey.survey_id
        arr << 'NA (old survey)'
      else
        selected_responses = completed_survey.selected_responses.joins{ response.question }.where{ response.question.short_text == my{question.short_text}}
        
        if selected_responses.empty?
          arr << "#{question.short_text}"
        else
          arr << selected_responses.first.response.points
        end
      end
    end
    csv << arr
  end
end -%><%= csv_output.html_safe %>